<div class="LeftPaneNav" onMouseOut="unHoverNav(event)">
    <div class="HighlightBlock"></div>
    <div class="ActiveBlock"></div>
    <div class="NavItem Active" onMouseOver="hoverNav(this)" onClick="clickNav(this)" data-list-index="0" data-linked-class="CitationsContainer"><i class="fa-solid fa-pen-nib"></i><p>Citations</p></div>
    <div class="NavItem" onMouseOver="hoverNav(this)" onClick="clickNav(this)" data-list-index="1" data-linked-class="LicensesContainer"><i class="fa-solid fa-copyright"></i><p>License Violations</p></div>
    <div class="NavItem" onMouseOver="hoverNav(this)" onClick="clickNav(this)" data-list-index="2" data-linked-class="SBOMContainer"><i class="fa-solid fa-scroll"></i><p>SBOM</p></div>
    <div class="NavItem" onMouseOver="hoverNav(this)" onClick="clickNav(this)" data-list-index="3" data-linked-class="SearchSECO"><i class="fa-solid fa-file-code"></i><p>SearchSECO</p></div>
</div>

<style>
    .LeftPaneNav {
        width: 100%;
        background: #d9f8df;
        padding: 8px;
        border-radius: 8px;
        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
        position: relative;
        z-index: 0;
        display: flex;
        flex-direction: row;
    }

    .LeftPaneNav .NavItem {
        margin: 8px 16px;
        font-size: 1.2rem;
        color: #0c281e;
        cursor: pointer;
        display: flex;
        flex-direction: row;
        align-items: center;
        text-align: center;
        position: relative;
        z-index: 2;
        transition: color ease 150ms;
    }


    .LeftPaneNav .NavItem p {
        color: #0c281e;
    }
    .LeftPaneNav .HighlightBlock,
    .LeftPaneNav .ActiveBlock {
        height: calc(80% - 4px); /*take into account the padding*/
        position: absolute;
        width: 130px;
        translate: 6px;
        z-index: 1;
        border-radius: 12px;
        transition: all 300ms ease;
    }

    .HighlightBlock {
        background: #abd2c5;
    }
    .ActiveBlock {
        background: #0c281e;
    }

    .LeftPaneNav .NavItem.Active{
        cursor: pointer;
    }

    .LeftPaneNav .NavItem.Active p, .LeftPaneNav .NavItem.Active i{
        color: #d9f8df;
    }

    .LeftPaneNav .NavItem p {
        margin: 0;
        margin-left: 4px;
        padding: 0;
        align-self: center;
        text-align: center;
        position: relative;
        bottom: 1px;
    }

    /* Styling for the icon */
    .LeftPaneNav .NavItem > *:nth-child(1) {
        margin-right: 4px;
    }
</style>
<script>
window.addEventListener('load', () => {
    window.ActiveTab = document.querySelector(".ActiveTab");
    window.ActiveIndex = 0;

    <%# Handle missing pages %>
    for (const tab of document.querySelectorAll(".LeftPaneNav .NavItem")) {
        if (document.querySelector("." + tab.dataset.linkedClass).classList.contains("LeftPaneError")) {
            const icon = tab.querySelector("i");
            icon.classList.forEach((token) => {
                icon.classList.remove(token);
            });
            icon.classList.add("fa-solid", "fa-triangle-exclamation");
        }
    }
});

function moveHighlightBlockTo(ele) {
    const padding = 20;
    const {top, left, width, height} = ele.getBoundingClientRect();
    const highlightblock = document.querySelector('.HighlightBlock');
    const newwidth = Math.ceil(ele.clientWidth);
    highlightblock.style.width = `${newwidth + padding}px`;
    highlightblock.style.translate = `${(left - padding/2) - 8}px`;
}

function hoverNav(ele) {
    moveHighlightBlockTo(ele);
}

function unHoverNav(event) {
    let isFromNav = false;
    let ele = event.relatedTarget;

    while (ele && !isFromNav)
    {
        isFromNav = ele.classList.contains("LeftPaneNav");
        ele = ele.parentElement;
    }

    if (!isFromNav) {
        moveHighlightBlockTo(document.querySelector(".Active"));
    }
}


function clickNav(ele) {
    let active = document.querySelector(".Active");
    if (active === ele) {
        return;
    }

    const elementCSS = document.querySelector('.citationgraphBtn');

    if (ele.lastElementChild.firstChild.nodeValue == "Citations"){
        elementCSS.style.visibility = 'visible';
        elementCSS.style.display = 'block';
    } else{
        elementCSS.style.visibility = 'hidden';
        elementCSS.style.display = 'none';
    }

    active.classList.remove("Active");
    ele.classList.add('Active');
    const padding = 20;
    const {top, left, width, height} = ele.getBoundingClientRect();
    const highlightblock = document.querySelector('.ActiveBlock');
    const newwidth = Math.ceil(ele.clientWidth);
    highlightblock.style.width = `${newwidth + padding}px`;
    highlightblock.style.translate = `${(left - padding/2) - 8}px`;

    // Animating the tabs to slide in and out from the right direction.
    const newTab = document.querySelector("." + ele.dataset.linkedClass)
    if (window.ActiveIndex > ele.dataset.listIndex) {
        window.ActiveTab.classList.add("SlideOutLeft");
    }
    else {
        window.ActiveTab.classList.add("SlideOutRight");
    }
    setTimeout(() => {
        window.ActiveTab.classList.remove("SlideOutRight");
        window.ActiveTab.classList.remove("SlideOutLeft");
        window.ActiveTab.classList.add("Hidden");
        window.ActiveTab.classList.remove("ActiveTab");
    }, 150);
    setTimeout(() => {
        if (window.ActiveIndex > ele.dataset.listIndex) {
            newTab.classList.add("SlideInRight");
        }
        else {
            newTab.classList.add("SlideInLeft");
        }
        newTab.classList.remove("Hidden");
        newTab.classList.remove("SlideOutRight");
        newTab.classList.remove("SlideOutLeft");
        newTab.classList.add("ActiveTab");
        window.ActiveTab = document.querySelector('.ActiveTab');
        window.ActiveIndex = ele.dataset.listIndex;
    }, 150);
}

</script>


